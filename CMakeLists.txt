cmake_minimum_required(VERSION 3.15)
project(wxWidgetsSamples LANGUAGES CXX)

if("cxx_std_26" IN_LIST CMAKE_CXX_COMPILE_FEATURES)
  set(CMAKE_CXX_STANDARD 26)
elseif("cxx_std_23" IN_LIST CMAKE_CXX_COMPILE_FEATURES)
  set(CMAKE_CXX_STANDARD 23)
elseif("cxx_std_20" IN_LIST CMAKE_CXX_COMPILE_FEATURES)
  set(CMAKE_CXX_STANDARD 20)
endif()
set(CMAKE_CXX_STANDARD_REQUIRED ON)

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

if(DEFINED ENV{wxWidgets_CONFIGURATION})
  set(wxWidgets_CONFIGURATION $ENV{wxWidgets_CONFIGURATION})
endif()

if(DEFINED VCPKG_INSTALLED_DIR AND DEFINED VCPKG_TARGET_TRIPLET)
  set(VCPKG_INCLUDE_DIR ${VCPKG_INSTALLED_DIR}/${VCPKG_TARGET_TRIPLET}/include)
  message(STATUS "VCPKG_INCLUDE_DIR: ${VCPKG_INCLUDE_DIR}")
endif()

find_package(wxWidgets CONFIG REQUIRED)
if(wxWidgets_FOUND)
  message(STATUS "wxWidgets components: ${wxWidgets_COMPONENTS}")
  message(STATUS "wxWidgets include directories: ${wxWidgets_INCLUDE_DIRS}")
  message(STATUS "wxWidgets libraries: ${wxWidgets_LIBRARIES}")
  message(STATUS "wxWidgets library directories: ${wxWidgets_LIBRARY_DIRS}")    
else()
  message(FATAL_ERROR "wxWidgets not found. Please set wxWidgets_ROOT_DIR or install wxWidgets.")
endif()

find_package(PkgConfig QUIET)
if(PKG_CONFIG_FOUND)
  pkg_check_modules(GTK QUIET gtk4)
  if(GTK_FOUND)
    set(USE_GTK 1)
    set(GTK_VERSION 4)
  else()    
    pkg_check_modules(GTK QUIET gtk+-3.0)
    if(GTK_FOUND)
      set(USE_GTK 1)
      set(GTK_VERSION 3)
    else()
      set(USE_GTK 0)
      set(GTK_VERSION 0)
    endif()
  endif()
else()
  set(USE_GTK 0)
  set(GTK_VERSION 0)
endif()
if(USE_GTK)
  message(STATUS "GTK version ${GTK_VERSION} found via pkg-config.")
  message(STATUS "GTK include directories: ${GTK_INCLUDE_DIRS}")
  message(STATUS "GTK libraries: ${GTK_LIBRARIES}")
  message(STATUS "GTK library directories: ${GTK_LIBRARY_DIRS}")
endif()

message(STATUS "CXX standard: ${CMAKE_CXX_STANDARD}")
message(STATUS "Detected generator: ${CMAKE_GENERATOR}")
message(STATUS "Detected c compiler: ${CMAKE_C_COMPILER}")
message(STATUS "Detected c++ compiler: ${CMAKE_CXX_COMPILER}")
message(STATUS "Detected resource compiler: ${CMAKE_RC_COMPILER}")
message(STATUS "Linker flags: ${CMAKE_EXE_LINKER_FLAGS}")

add_compile_definitions(_CRT_NON_CONFORMING_SWPRINTFS=1 _CRT_SECURE_NO_DEPRECATE=1 _SCL_SECURE_NO_WARNINGS=1 _UNICODE UNICODE)
include_directories(BEFORE ${CMAKE_CURRENT_SOURCE_DIR} ${wxWidgets_INCLUDE_DIRS})

add_subdirectory(access)
add_subdirectory(animate)
add_subdirectory(archive)
add_subdirectory(artprov)
add_subdirectory(aui)
add_subdirectory(bombs)
add_subdirectory(calendar)
add_subdirectory(caret)
add_subdirectory(collpane)
add_subdirectory(combo)
add_subdirectory(config)
add_subdirectory(console)
add_subdirectory(dataview)
add_subdirectory(dialogs)
add_subdirectory(dialup)
add_subdirectory(display)
add_subdirectory(dnd)
add_subdirectory(docview)
add_subdirectory(dragimag)
add_subdirectory(drawing)
add_subdirectory(erase)
add_subdirectory(event)
add_subdirectory(except)
add_subdirectory(exec)
add_subdirectory(font)
add_subdirectory(forty)
add_subdirectory(fractal)
add_subdirectory(fswatcher)
add_subdirectory(grid)
add_subdirectory(help)
add_subdirectory(htlbox)
add_subdirectory(html)
add_subdirectory(image)
add_subdirectory(internat)
add_subdirectory(ipc)
add_subdirectory(keyboard)
add_subdirectory(layout)
add_subdirectory(life)
add_subdirectory(listctrl)
add_subdirectory(mdi)
add_subdirectory(mediaplayer)
add_subdirectory(menu)
add_subdirectory(minimal)
add_subdirectory(notebook)
add_subdirectory(opengl)
add_subdirectory(poem)
add_subdirectory(popup)
add_subdirectory(power)
add_subdirectory(preferences)
add_subdirectory(printing)
add_subdirectory(propgrid)
add_subdirectory(ribbon)
add_subdirectory(richtext)
add_subdirectory(sashtest)
add_subdirectory(scroll)
add_subdirectory(shaped)
add_subdirectory(sockets)
add_subdirectory(sound)
add_subdirectory(splash)
add_subdirectory(splitter)
add_subdirectory(statbar)
add_subdirectory(svg)
add_subdirectory(taborder)
add_subdirectory(taskbar)
add_subdirectory(text)
add_subdirectory(thread)
add_subdirectory(toolbar)
add_subdirectory(touchtest)
add_subdirectory(treectrl)
add_subdirectory(treelist)
add_subdirectory(typetest)
add_subdirectory(uiaction)
add_subdirectory(validate)
add_subdirectory(vscroll)
add_subdirectory(webrequest)
add_subdirectory(widgets)
add_subdirectory(wizard)
add_subdirectory(wrapsizer)
add_subdirectory(xrc)

if(wxWidgets_stc_FOUND)
  add_subdirectory(stc)
endif()

if(wxWidgets_webview_FOUND)
  add_subdirectory(webview)
endif()

if(MSVC AND WIN32)
  add_subdirectory(debugrpt)
  add_subdirectory(mfc)
endif()

if(WIN32)
  add_subdirectory(nativdlg)
  add_subdirectory(oleauto)
  add_subdirectory(ownerdrw)
  add_subdirectory(regtest)
  add_subdirectory(secretstore)
  add_subdirectory(taskbarbutton)
endif()

if(WIN32 AND wxWidgets_USE_STATIC)
  add_subdirectory(dll)
endif()

add_subdirectory(wxWidgetsBook)
